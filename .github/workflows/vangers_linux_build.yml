name: Vangers Linux Build

on: [push, pull_request]

env:
  ARCHITECTURE: 64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
            image: registry.gitlab.steamos.cloud/steamrt/sniper/sdk:latest
            options: -v ${{ github.workspace }}:/app
            shell: bash
            run: |
              set -xe
              cd /app 
              apt install -y gcc-9 g++-9 ninja-build yasm
              echo "Install rust & cargo"
              curl https://sh.rustup.rs -sSf | bash -s -- -y --no-modify-path
              echo "Compile renderer_ng"
              pushd vange-rs/lib/ffi
              export PATH=$HOME/.cargo/bin:$PATH
              cargo build --release
              ls -lh ../../target
              popd
              echo "Install Clunk"
              git clone --depth 1 https://github.com/stalkerg/clunk.git clunk
              cd clunk
              mkdir build
              cd build
              cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9 -DWITH_SSE=${{ env.ARCHITECTURE == '64' && 'OFF' || 'ON' }}
              make -j$(nproc)
              make install
              cd /app
              echo "Install FFMpeg"
              git clone --depth 1 --branch release/6.0 https://git.ffmpeg.org/ffmpeg.git ffmpeg
              cd ffmpeg
              ./configure --enable-shared --prefix=/usr/local \
                --disable-everything \
                --enable-swscale \
                --enable-zlib \
                --enable-demuxer=avi,rawvideo \
                --enable-decoder=png,rawvideo,h264 \
                --enable-parser=png \
                --enable-protocol=file \
                --disable-d3d11va \
                --disable-dxva2 \
                --disable-vaapi \
                --disable-vdpau \
                --disable-vulkan \
                --disable-doc --disable-ffplay --disable-ffprobe --disable-ffmpeg \
                --disable-static --disable-bzlib --disable-libopenjpeg --disable-iconv
              make -j$(nproc)
              make install
              cd /app
              mkdir build
              cd build
              echo "Compile Vangers"
              cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc-9 -DCMAKE_CXX_COMPILER=g++-9 -DCMAKE_SKIP_RPATH=ON
              VERBOSE=1 make -j$(nproc)
              cd /app
              mkdir -p artifacts
              cp build/src/vangers artifacts/vangers${{ env.ARCHITECTURE }}.bin
              cp /usr/local/lib/libclunk.so artifacts/lib${{ env.ARCHITECTURE }}
              cp /usr/local/lib/libavcodec.so.60 artifacts/lib${{ env.ARCHITECTURE }}
              cp /usr/local/lib/libavformat.so.60 artifacts/lib${{ env.ARCHITECTURE }}
              cp /usr/local/lib/libavutil.so.58 artifacts/lib${{ env.ARCHITECTURE }}
              cp /usr/lib/i386-linux-gnu/libSDL2_net-2.0.so.0 artifacts/lib${{ env.ARCHITECTURE }}
              cp /usr/lib/x86_64-linux-gnu/libSDL2_net-2.0.so.0 artifacts/lib${{ env.ARCHITECTURE }}
              tar -cvf artifacts.tar artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Vangers-Release-linux${{ env.ARCHITECTURE }}
          path: artifacts.tar
